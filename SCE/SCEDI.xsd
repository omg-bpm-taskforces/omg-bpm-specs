<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:scedi="https://www.omg.org/spec/SCE/20211108/SCEDI" 
	xmlns:dc="http://www.omg.org/spec/SCE/20210830/DC" 
	xmlns:di="http://www.omg.org/spec/SCE/20210830/DI" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	targetNamespace="https://www.omg.org/spec/SCE/20211108/SCEDI" 
	elementFormDefault="qualified"
	attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.omg.org/spec/SCE/20210830/DC" schemaLocation="DC.xsd"/>
	<xsd:import namespace="http://www.omg.org/spec/SCE/20210830/DI" schemaLocation="DI.xsd"/>

	<xsd:element name="SCEDI" type="scedi:tSCEDI">
		<xsd:annotation>
			<xsd:documentation>
				The class SCEDI is a container for the shared SCEStyle and all the SCEDiagram defined in a SCE-dependent modeling package.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="tSCEDI">
		<xsd:sequence>
			<xsd:element name="diagram" type="scedi:tSCEDiagram" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						A list of SCEDiagrams.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="style" type="scedi:tSCEStyle" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						A list of shared SCEStylethat can be referenced by all SCE-dependent diagrams and SCEDiagramElement.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>				
	</xsd:complexType>

	<xsd:element name="SCEDiagram" type="scedi:tSCEDiagram" abstract="true">
		<xsd:annotation>
			<xsd:documentation>
				The abstract class SCEDiagram specializes DI::Diagram. It is a kind of Diagram that represents a depiction of all or part of a SCE-dependent model. 
				It is contained within the SCEDI element. The languages that are dependent on SCE will define concrete diagrams based on SCEDiagram.
				SCEDiagram is the container of SCEDiagramElement (SCEShape(s) and SCEEdge(s)). SCEDiagram cannot include other SCEDiagrams. A SCEDiagram can 
				define a SCEStyle locally and/or it can refer to a shared one defined in the SCEDI. Properties defined in the local style overrides
				the one in the referenced shared style. That combined style (shared and local) is the default style for all the SCEDiagramElement contained 
				in this SCEDiagram. The SCEDiagram class represents a two-dimensional surface with an origin of (0, 0) at the top left corner.
				This means that the x and y axes have increasing coordinates to the right and bottom. Only positive coordinates are allowed for diagram elements 
				that are nested in a SCEDiagram.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="tSCEDiagram">
		<xsd:complexContent>
			<xsd:extension base="di:Diagram">
				<xsd:sequence>
					<xsd:element ref="scedi:SCEDiagramElement" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>
								Element Role: diagramElement
								A list of SCEDiagramElements (SCEShape and SCEEdge) that are depicted in the
								SCE-dependent diagram. The diagram elements are ordered.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="size" type="dc:Dimension" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								The size of this diagram. If not specified, the the SCE-dependent diagram is unbounded.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sharedStyleRef" type="xsd:QName" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>
								A reference to a SCEStyle defined in the SCEDI that serves as the default styling of
								the SCEDiagramElement in the SCE-dependent diagram.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="localStyle" type="scedi:tSCEStyle" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								A SCEStyle that defines the default styling for this diagram. Properties defined in
								that style override the ones in the sharedStyle.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="SCEDiagramElement" type="di:DiagramElement" abstract="true">
		<xsd:annotation>
			<xsd:documentation>
				The SCEDiagramElement class is contained by the SCEDiagram and is the base class for DMNShape and DMNEdge. SCEDiagramElement inherits its styling 
				from its parent SCEDiagram. In addition, it can refer to one of the shared SCEStyle defined in the SCEDI and/or it can define a local style. See 
				section below for more details on styling. SCEDiagramElement MAY also contain a SCELabel when it has a visible text label. If no SCELabel is defined, 
				the SCEDiagramElement should be depicted without a label.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>

	<xsd:element name="SCEEdge" type="scedi:tSCEEdge" substitutionGroup="scedi:SCEDiagramElement">
		<xsd:annotation>
			<xsd:documentation>
				The SCEEdge class specializes DI::Edge and SCEDiagramElement. It is a kind of Edge that can depict a relationship between two SCE-dependent 
				model elements. SCEEdge are used to depict Requirements or Associations in the SCE-dependent model. Since SCEDiagramElement might be
				depicted more than once, sourceElement and targetElement attributes allow to determine to which depiction a SCEEdge is connected. When 
				SCEEdge has a source, its sourceModelElement MUST refer to the SCEDiagramElement it starts from. That SCEDiagramElement MUST resolved to
				the SCEElement that is the actual source of the Requirement or Association. For Requirement, this is the required SCEElement. When it has a target, its
				targetModelElement MUST refer to the SCEDiagramElement where it ends. That SCEDiagramElement MUST resolved to the SCEElement that is the actual 
				target of the Requirement or Association. For Requirement, this is the SCEElement holding it.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="tSCEEdge">
		<xsd:complexContent>
			<xsd:extension base="di:Edge">
				<xsd:sequence>
					<xsd:element name="targetElementRef" type="xsd:QName" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								The actual SCEDiagramElement this SCEEdge is connecting to. This MUST be specified when the SCEEdge has a target.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sourceElementRef" type="xsd:QName" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								The actual SCEDiagramElement this SCEEdge is connecting from. This MUST be specified when the SCEEdge has a source.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="scedi:SCELabel" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								Element Role: label
								This element is added to Shape because the dual inheritence of the UML metamodel is not supported in XSD.
								An optional label when the SCE-dependent Element has a visible text label.                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="SCELabel" type="scedi:tSCELabel"/>
	<xsd:complexType name="tSCELabel">
		<xsd:annotation>
			<xsd:documentation>
				SCELabel represents the depiction of some textual information about a Â element. A SCELabel
				is not a top-level element but is always nested inside either a SCEShape or a SCEEdge. It
				does not have its own reference to a SCE element but rather inherits that reference from its
				parent SCEShape or DMNEdge. The textual information depicted by the label is derived from
				the name attribute of the referenced SCEElement.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="di:Shape">
				<xsd:attribute name="text" type="xsd:string" use="optional"/>
			</xsd:extension>
			<!-- DS changed type from xsd:String to xsd:string (case sensitive) -->
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="SCEShape" type="scedi:tSCEShape" substitutionGroup="scedi:SCEDiagramElement"/>
	<xsd:complexType name="tSCEShape">
		<xsd:annotation>
			<xsd:documentation>
				The SCEShape class specializes DI::Shape and SCEDiagramElement. It is a kind of Shape that depicts a DMNElement from the SCE-dependent model. 
				SCEShape represents a Group or a Text Annotation that is depicted on the diagram. SCE-dependent models may add additional shapes
				to their diagrams. SCEShape has no additional properties but a SCE-dependent model may extend this class to add properties that are used to 
				further specify the appearance of some shapes that cannot be deduced from the SCE-dependent model.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="di:Shape">
				<xsd:sequence>
					<xsd:element ref="scedi:SCELabel" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								Element Role: label
								This element is added to Shape because the dual inheritence of the UML metamodel is not supported in XSD.
								An optional label when the SCE-dependent Element has a visible text label.                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="sceElementRef" type="xsd:QName" minOccurs="1" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								This element is added to Shape because the dual inheritence of the UML metamodel is not supported in XSD.
								A reference to the SCEElement that is being depicted.                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="SCEStyle" type="scedi:tSCEStyle" substitutionGroup="di:Style">
		<xsd:annotation>
			<xsd:documentation>
				SCEStyle specializes DC::Style. It is a kind of style that provides appearance options for a SCEDiagramElement. SCEStyle is used to keep some 
				non-normative visual attributes such as colors and font. SCE doesnât give any semantic to color and font styling, but tools can decide to use them and
				interchange them. SCEDiagramElement style is calculated by percolating up SCEStyle attributes defined at a different level of the hierarchy. 
				Each attribute is considered independently (meaning that a SCEStyle attribute can be individually overloaded). The precedence rules are as follow:
				â¢ The SCEStyle defined by the localStyle attribute of the SCEDiagramElement
				â¢ The SCEStyle referenced by the sharedStyle attribute of the SCEDiagramElement
				â¢ The SCEStyle defined by the localStyle attribute of the parent SCEDiagram
				â¢ The SCEStyle referenced by the sharedStyle attribute of the parent SCEDiagram
				The default attribute value defined in SCEStyle attributes.
				For example, letâs say we have the following:
				â¢ SCEDiagramElement has a local SCEStyle that specifies the fillColor and strokeColor
				â¢ Its parent SCEDiagram defines a local SCEStyle that specifies the fillColor and fontColor
				Then the resulting SCEDiagramElement should use:
				â¢ The fillColor and strokeColor defined at the SCEDiagramElement level (as they are defined
				locally).
				â¢ The fontColor defined at the SCEDiagram level (as the fillColor was overloaded locally).
				â¢ All other SCEStyle attributes would have their default values.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="tSCEStyle">
		<xsd:complexContent>
			<xsd:extension base="di:Style">
				<xsd:sequence>
					<xsd:element name="fillColor" type="dc:Color" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								The color use to write the label. The default is black.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="strokeColor" type="dc:Color" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								The color use to draw the shape borders. The default is black.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="fontColor" type="dc:Color" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								The color use to write the label. The default is black.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="labelHorizontalAlignement" type="dc:AlignmentKind" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								How text should be positioned horizontally within the Label bounds. Default depends
								of the SCEDiagramElement the label is attached to (see section below).
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="labelVerticalAlignment" type="dc:AlignmentKind" minOccurs="0" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>
								How the text should be positioned vertically inside the Label bounds. Default
								depends of the SCEDiagramElement the label is attached to (see section below). Start
								means âtopâ and end means âbottomâ.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="fontStrikeThrough" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="fontUnderline" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="fontBold" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="fontItalic" type="xsd:boolean" use="optional"/>
				<xsd:attribute name="fontSize" type="xsd:double" use="optional"/>
				<xsd:attribute name="fontFamily" type="xsd:string" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
